// 9--1

#include <iostream>
using namespace std;

int main()
{

	// int 	num[5] = {10, 20, 30, 40, 50};
	int 	num1, num2, num3, num4, num5;
	num1 = 10;
	num2 = 20;
	num3 = 30;
	num4 = 40;
	num5 = 50;

	int 	* ptr;
	ptr =  &num1;

	cout << *ptr << endl; // print value? 10
	cout << *(ptr+1) << endl; // print value? 20 
}

// 9--2

#include <iostream>
using namespace std;

void printArray(int *, int );
int main()
{

	int 	num[5] = {10, 20, 30, 40, 50};
	int 	* ptr;
	// array name can use used as a pointer
		// 1) did not initialize with the address 
		// 2) This pointer ( array nanme) can not be assigned with other address values
		// 	    int i;  num = &i; // error
		// Array name points to the address of the first element.
		
	printArray(num, 5);

}

void printArray(int *ptr, int N)
{
	for(int i=0; i<5; i++)
		cout << *(ptr+i) << "\t";
	cout << endl;
}

 //What is the differance between the *(num +i) and num[i]?

 // *(num + i) iterates through an array of pointers
 // num[i] iterates through a regular array 